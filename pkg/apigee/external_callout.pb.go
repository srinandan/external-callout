// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: external_callout.proto

package apigee

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// This message includes all the documented flow variables in the link below.
// https://docs.apigee.com/api-platform/reference/variables-reference
// Modifying the mutable fields will lead to the corresponding flow variables
// getting updated.
type MessageContext struct {
	// The HTTP request, only populated when the execution is on proxy request
	// flow or target request flow.
	Request *Request `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	// The response, only populated when the execution is on proxy response flow
	// or target response flow.
	Response *Response `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	// The error message.  This is populated only in error flow.
	Error *Error `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	// TODO(b/169939436): Remove this if it's not needed in any way.
	// The same information is present in field `error`.  In the flow variable
	// doc, only fault.name is there.  Even if we want to repeat the information,
	// this field cannot be repeated because fault.type is available only as a
	// flow variable.  When there are multiple faults added to ExecutionContext,
	// we wouldn't know which fault the fault.type is for.  I think we should
	// just remove this field.
	//
	// The faults raised by the polices leading up to this External Callout
	// policy.  This field is read-only, changes made to it won't take effect.
	ImmutableFaults []*Fault `protobuf:"bytes,4,rep,name=immutable_faults,json=immutableFaults,proto3" json:"immutable_faults,omitempty"`
	// This field can be used to raise a fault. Using this field forces the
	// runtime request to switch to the error flow even when 'continueOnError' is
	// true on the policy.
	// Only name and fault_string need to be specified.  Other fields in Fault are
	// immutable and will be determined by the Message Processor.
	Fault *Fault `protobuf:"bytes,5,opt,name=fault,proto3" json:"fault,omitempty"`
	// APIProxy-related properties.
	ApiProxy *ApiProxy `protobuf:"bytes,6,opt,name=api_proxy,json=apiProxy,proto3" json:"api_proxy,omitempty"`
	// Properties for the client used to send Apigee Edge the request.
	Client *Client `protobuf:"bytes,7,opt,name=client,proto3" json:"client,omitempty"`
	// Properties for the current flow, e.g. target request flow.
	CurrentFlow *CurrentFlow `protobuf:"bytes,8,opt,name=current_flow,json=currentFlow,proto3" json:"current_flow,omitempty"`
	// https://docs.apigee.com/api-platform/reference/variables-reference#messageid
	MessageId string `protobuf:"bytes,9,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// https://docs.apigee.com/api-platform/reference/variables-reference#organization
	OrganizationName string `protobuf:"bytes,10,opt,name=organization_name,json=organizationName,proto3" json:"organization_name,omitempty"`
	// https://docs.apigee.com/api-platform/reference/variables-reference#environment
	EnvironmentName string `protobuf:"bytes,11,opt,name=environment_name,json=environmentName,proto3" json:"environment_name,omitempty"`
	// Proxy-related and proxy-endpoint-related properties.
	Proxy *Proxy `protobuf:"bytes,12,opt,name=proxy,proto3" json:"proxy,omitempty"`
	// Properties for Route Rule and Target.
	Route *Route `protobuf:"bytes,13,opt,name=route,proto3" json:"route,omitempty"`
	// Properties for target.
	Target *Target `protobuf:"bytes,14,opt,name=target,proto3" json:"target,omitempty"`
	// Additional flow variables.  The keys are flattened out, meaning a.b.c.1 and
	// a.b.c.2 are separate entries in the map.  Note that flow variables' names
	// cannot be prefixes of other variables.  For example, when trying to add
	// a.b.c and a.b, one will override the other.  However, a.c.d and a.b can be
	// added at the same time because one is not the prefix of the other.  As
	// another example, when a.b.c and a.c exist, if one tries to add a = 5, as a
	// result, both a.b.c and a.c will be removed and 'a' will remain with a value
	// of 5.
	//
	// To remove a flow variable, set the value to the default instance of
	// FlowVariable.  Note that removing a 'parent' variable will remove all the
	// children.  For example, removing a will remove a.*.
	AdditionalFlowVariables map[string]*FlowVariable `protobuf:"bytes,15,rep,name=additional_flow_variables,json=additionalFlowVariables,proto3" json:"additional_flow_variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral    struct{}                 `json:"-"`
	XXX_unrecognized        []byte                   `json:"-"`
	XXX_sizecache           int32                    `json:"-"`
}

func (m *MessageContext) Reset()         { *m = MessageContext{} }
func (m *MessageContext) String() string { return proto.CompactTextString(m) }
func (*MessageContext) ProtoMessage()    {}
func (*MessageContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2142ecffc0e2122, []int{0}
}

func (m *MessageContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageContext.Unmarshal(m, b)
}
func (m *MessageContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageContext.Marshal(b, m, deterministic)
}
func (m *MessageContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageContext.Merge(m, src)
}
func (m *MessageContext) XXX_Size() int {
	return xxx_messageInfo_MessageContext.Size(m)
}
func (m *MessageContext) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageContext.DiscardUnknown(m)
}

var xxx_messageInfo_MessageContext proto.InternalMessageInfo

func (m *MessageContext) GetRequest() *Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *MessageContext) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *MessageContext) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *MessageContext) GetImmutableFaults() []*Fault {
	if m != nil {
		return m.ImmutableFaults
	}
	return nil
}

func (m *MessageContext) GetFault() *Fault {
	if m != nil {
		return m.Fault
	}
	return nil
}

func (m *MessageContext) GetApiProxy() *ApiProxy {
	if m != nil {
		return m.ApiProxy
	}
	return nil
}

func (m *MessageContext) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *MessageContext) GetCurrentFlow() *CurrentFlow {
	if m != nil {
		return m.CurrentFlow
	}
	return nil
}

func (m *MessageContext) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func (m *MessageContext) GetOrganizationName() string {
	if m != nil {
		return m.OrganizationName
	}
	return ""
}

func (m *MessageContext) GetEnvironmentName() string {
	if m != nil {
		return m.EnvironmentName
	}
	return ""
}

func (m *MessageContext) GetProxy() *Proxy {
	if m != nil {
		return m.Proxy
	}
	return nil
}

func (m *MessageContext) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

func (m *MessageContext) GetTarget() *Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *MessageContext) GetAdditionalFlowVariables() map[string]*FlowVariable {
	if m != nil {
		return m.AdditionalFlowVariables
	}
	return nil
}

// https://docs.apigee.com/api-platform/reference/variables-reference#request
type Request struct {
	Uri         string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Verb        string `protobuf:"bytes,2,opt,name=verb,proto3" json:"verb,omitempty"`
	HttpVersion string `protobuf:"bytes,3,opt,name=http_version,json=httpVersion,proto3" json:"http_version,omitempty"`
	// To remove a header, form param, or query param, set it to
	// Strings.getDefaultInstance().  For example, in text proto,
	// `headers {key: 'h2' value {}}` can be used to remove header "h2".
	// When a header or param exists already, when a different Strings presents in
	// the maps below, the old values will be replaced with the Strings.  For
	// example, to remove Content-Type: application/xml, do
	// headers.put("asdf", Strings.getDefaultInstance()).  If the values for
	// header h is 1,2, and 3, the following will replace the values with 1, 4, 5.
	// headers.put("h", Strings.newBuilder().addAllStrings("1", "4", "5").build())
	// What's not presented in the map will not be operated on.
	Headers     map[string]*Strings `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FormParams  map[string]*Strings `protobuf:"bytes,5,rep,name=form_params,json=formParams,proto3" json:"form_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	QueryParams map[string]*Strings `protobuf:"bytes,6,rep,name=query_params,json=queryParams,proto3" json:"query_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// If content exists, setting this field to empty string will cause the
	// content to be removed.
	Content              string   `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2142ecffc0e2122, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *Request) GetVerb() string {
	if m != nil {
		return m.Verb
	}
	return ""
}

func (m *Request) GetHttpVersion() string {
	if m != nil {
		return m.HttpVersion
	}
	return ""
}

func (m *Request) GetHeaders() map[string]*Strings {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *Request) GetFormParams() map[string]*Strings {
	if m != nil {
		return m.FormParams
	}
	return nil
}

func (m *Request) GetQueryParams() map[string]*Strings {
	if m != nil {
		return m.QueryParams
	}
	return nil
}

func (m *Request) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// https://docs.apigee.com/api-platform/reference/variables-reference#response
type Response struct {
	StatusCode int32 `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	// Examples are OK, Not Found.
	ReasonPhrase string `protobuf:"bytes,2,opt,name=reason_phrase,json=reasonPhrase,proto3" json:"reason_phrase,omitempty"`
	// See the same fields in Request for how to operate on these fields.
	Headers              map[string]*Strings `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Content              string              `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2142ecffc0e2122, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *Response) GetReasonPhrase() string {
	if m != nil {
		return m.ReasonPhrase
	}
	return ""
}

func (m *Response) GetHeaders() map[string]*Strings {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *Response) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// Fault contains the information about the faults raised prior to the
// External Callout policy.  It is possible for faults to occur without
// entering error flow when continueOnError is set to true by previous steps
// executed.  See also
// https://docs.apigee.com/api-platform/fundamentals/fault-handling#creatingfaultrules-addingmessageloggingtothepostclientflow
//
// Refer to the following doc on the fields in Fault.
// https://docs.apigee.com/api-platform/fundamentals/what-you-need-know-about-policy-errors
//
// Below is an example of the text representation of a fault.  The last part of
// errorcode is 'name', SourceMessageNotAvailable in the example.  When raising
// a fault using this proto messasge, errorcode will be
// steps.externalcallout.{name}.
// {
//   "fault":{
//      "detail":{
//         "errorcode":"steps.extractvariables.SourceMessageNotAvailable"
//      },
//      "faultstring":"foo message is not available for ExtractVariable: ParseJsonResponse"
//   }
// }
//
// For the information available when a fault occurs, see the link below.
// Note that External Callout policy can be used in a FaultRule.
// https://docs.apigee.com/api-platform/fundamentals/fault-handling#buildingconditions-otheravailablevariables
type Fault struct {
	// The last part of the errorcode.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// When a fault is triggered by RaiseFault policy, this is set.  See also
	// https://docs.apigee.com/api-platform/reference/policies/raise-fault-policy#flowvariables
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// This can be step, transport, for example.  When it's step, it means the
	// fault was raised when executing some step (policy).
	Category string `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	// In some Apigee docs, you may see this field referred to as 'reason'.
	FaultString          string   `protobuf:"bytes,4,opt,name=fault_string,json=faultString,proto3" json:"fault_string,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Fault) Reset()         { *m = Fault{} }
func (m *Fault) String() string { return proto.CompactTextString(m) }
func (*Fault) ProtoMessage()    {}
func (*Fault) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2142ecffc0e2122, []int{3}
}

func (m *Fault) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fault.Unmarshal(m, b)
}
func (m *Fault) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fault.Marshal(b, m, deterministic)
}
func (m *Fault) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fault.Merge(m, src)
}
func (m *Fault) XXX_Size() int {
	return xxx_messageInfo_Fault.Size(m)
}
func (m *Fault) XXX_DiscardUnknown() {
	xxx_messageInfo_Fault.DiscardUnknown(m)
}

var xxx_messageInfo_Fault proto.InternalMessageInfo

func (m *Fault) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Fault) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Fault) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Fault) GetFaultString() string {
	if m != nil {
		return m.FaultString
	}
	return ""
}

// Error is populated when the execution flow enters error flow because a fault
// is raised.  When this message populated, is.error is true.
// https://docs.apigee.com/api-platform/reference/variables-reference#is
type Error struct {
	// The error message.  This is the `fault_string` of the fault that caused the
	// flow to enter error flow.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// See https://docs.apigee.com/api-platform/reference/variables-reference#error
	// This field stands for the error response once the execution enters error
	// flow.
	Response             *Response `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2142ecffc0e2122, []int{4}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Error) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

// Contains properties populated for every policy.
// This is https://docs.apigee.com/api-platform/reference/variables-reference#apigee
type Policy struct {
	// The name of the policy.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The time taken for a policy to run.
	TimeTakenNs int64 `protobuf:"varint,2,opt,name=time_taken_ns,json=timeTakenNs,proto3" json:"time_taken_ns,omitempty"`
	// Other properties, flattened.  The following link serves as an example where
	// target.url and requesturi will be in the map with their values.
	// https://docs.apigee.com/api-platform/reference/variables-reference#servicecallout
	Properties           map[string]*Strings `protobuf:"bytes,3,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Policy) Reset()         { *m = Policy{} }
func (m *Policy) String() string { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()    {}
func (*Policy) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2142ecffc0e2122, []int{5}
}

func (m *Policy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Policy.Unmarshal(m, b)
}
func (m *Policy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Policy.Marshal(b, m, deterministic)
}
func (m *Policy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Policy.Merge(m, src)
}
func (m *Policy) XXX_Size() int {
	return xxx_messageInfo_Policy.Size(m)
}
func (m *Policy) XXX_DiscardUnknown() {
	xxx_messageInfo_Policy.DiscardUnknown(m)
}

var xxx_messageInfo_Policy proto.InternalMessageInfo

func (m *Policy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Policy) GetTimeTakenNs() int64 {
	if m != nil {
		return m.TimeTakenNs
	}
	return 0
}

func (m *Policy) GetProperties() map[string]*Strings {
	if m != nil {
		return m.Properties
	}
	return nil
}

// Contains api-proxy-related properties.  This is the information specified in
// the XML file that contains <APIProxy> element.
type ApiProxy struct {
	// https://docs.apigee.com/api-platform/reference/variables-reference#apiproxy
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Revision             string   `protobuf:"bytes,2,opt,name=revision,proto3" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApiProxy) Reset()         { *m = ApiProxy{} }
func (m *ApiProxy) String() string { return proto.CompactTextString(m) }
func (*ApiProxy) ProtoMessage()    {}
func (*ApiProxy) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2142ecffc0e2122, []int{6}
}

func (m *ApiProxy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApiProxy.Unmarshal(m, b)
}
func (m *ApiProxy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApiProxy.Marshal(b, m, deterministic)
}
func (m *ApiProxy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApiProxy.Merge(m, src)
}
func (m *ApiProxy) XXX_Size() int {
	return xxx_messageInfo_ApiProxy.Size(m)
}
func (m *ApiProxy) XXX_DiscardUnknown() {
	xxx_messageInfo_ApiProxy.DiscardUnknown(m)
}

var xxx_messageInfo_ApiProxy proto.InternalMessageInfo

func (m *ApiProxy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ApiProxy) GetRevision() string {
	if m != nil {
		return m.Revision
	}
	return ""
}

// Client refers to the application or system that sent a request to the Edge
// Runtime.
// https://docs.apigee.com/api-platform/reference/variables-reference#client
type Client struct {
	Cn                   string   `protobuf:"bytes,1,opt,name=cn,proto3" json:"cn,omitempty"`
	Country              string   `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	EmailAddress         string   `protobuf:"bytes,3,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	Host                 string   `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	Ip                   string   `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`
	Locality             string   `protobuf:"bytes,6,opt,name=locality,proto3" json:"locality,omitempty"`
	Organization         string   `protobuf:"bytes,7,opt,name=organization,proto3" json:"organization,omitempty"`
	OrganizationUnit     string   `protobuf:"bytes,8,opt,name=organization_unit,json=organizationUnit,proto3" json:"organization_unit,omitempty"`
	Port                 int32    `protobuf:"varint,9,opt,name=port,proto3" json:"port,omitempty"`
	Scheme               string   `protobuf:"bytes,10,opt,name=scheme,proto3" json:"scheme,omitempty"`
	State                string   `protobuf:"bytes,11,opt,name=state,proto3" json:"state,omitempty"`
	SslEnabled           bool     `protobuf:"varint,12,opt,name=ssl_enabled,json=sslEnabled,proto3" json:"ssl_enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Client) Reset()         { *m = Client{} }
func (m *Client) String() string { return proto.CompactTextString(m) }
func (*Client) ProtoMessage()    {}
func (*Client) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2142ecffc0e2122, []int{7}
}

func (m *Client) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Client.Unmarshal(m, b)
}
func (m *Client) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Client.Marshal(b, m, deterministic)
}
func (m *Client) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Client.Merge(m, src)
}
func (m *Client) XXX_Size() int {
	return xxx_messageInfo_Client.Size(m)
}
func (m *Client) XXX_DiscardUnknown() {
	xxx_messageInfo_Client.DiscardUnknown(m)
}

var xxx_messageInfo_Client proto.InternalMessageInfo

func (m *Client) GetCn() string {
	if m != nil {
		return m.Cn
	}
	return ""
}

func (m *Client) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Client) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func (m *Client) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Client) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Client) GetLocality() string {
	if m != nil {
		return m.Locality
	}
	return ""
}

func (m *Client) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Client) GetOrganizationUnit() string {
	if m != nil {
		return m.OrganizationUnit
	}
	return ""
}

func (m *Client) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Client) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *Client) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Client) GetSslEnabled() bool {
	if m != nil {
		return m.SslEnabled
	}
	return false
}

// https://docs.apigee.com/api-platform/reference/variables-reference#current
type CurrentFlow struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrentFlow) Reset()         { *m = CurrentFlow{} }
func (m *CurrentFlow) String() string { return proto.CompactTextString(m) }
func (*CurrentFlow) ProtoMessage()    {}
func (*CurrentFlow) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2142ecffc0e2122, []int{8}
}

func (m *CurrentFlow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrentFlow.Unmarshal(m, b)
}
func (m *CurrentFlow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrentFlow.Marshal(b, m, deterministic)
}
func (m *CurrentFlow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrentFlow.Merge(m, src)
}
func (m *CurrentFlow) XXX_Size() int {
	return xxx_messageInfo_CurrentFlow.Size(m)
}
func (m *CurrentFlow) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrentFlow.DiscardUnknown(m)
}

var xxx_messageInfo_CurrentFlow proto.InternalMessageInfo

func (m *CurrentFlow) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CurrentFlow) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// https://docs.apigee.com/api-platform/reference/variables-reference#proxy
type Proxy struct {
	EndpointName         string   `protobuf:"bytes,1,opt,name=endpoint_name,json=endpointName,proto3" json:"endpoint_name,omitempty"`
	ClientIp             string   `protobuf:"bytes,2,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	BasePath             string   `protobuf:"bytes,3,opt,name=base_path,json=basePath,proto3" json:"base_path,omitempty"`
	PathSuffix           string   `protobuf:"bytes,4,opt,name=path_suffix,json=pathSuffix,proto3" json:"path_suffix,omitempty"`
	Url                  string   `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Proxy) Reset()         { *m = Proxy{} }
func (m *Proxy) String() string { return proto.CompactTextString(m) }
func (*Proxy) ProtoMessage()    {}
func (*Proxy) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2142ecffc0e2122, []int{9}
}

func (m *Proxy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Proxy.Unmarshal(m, b)
}
func (m *Proxy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Proxy.Marshal(b, m, deterministic)
}
func (m *Proxy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Proxy.Merge(m, src)
}
func (m *Proxy) XXX_Size() int {
	return xxx_messageInfo_Proxy.Size(m)
}
func (m *Proxy) XXX_DiscardUnknown() {
	xxx_messageInfo_Proxy.DiscardUnknown(m)
}

var xxx_messageInfo_Proxy proto.InternalMessageInfo

func (m *Proxy) GetEndpointName() string {
	if m != nil {
		return m.EndpointName
	}
	return ""
}

func (m *Proxy) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

func (m *Proxy) GetBasePath() string {
	if m != nil {
		return m.BasePath
	}
	return ""
}

func (m *Proxy) GetPathSuffix() string {
	if m != nil {
		return m.PathSuffix
	}
	return ""
}

func (m *Proxy) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// https://docs.apigee.com/api-platform/reference/variables-reference#route
type Route struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2142ecffc0e2122, []int{10}
}

func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Route) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

// https://docs.apigee.com/api-platform/reference/variables-reference#target
type Target struct {
	BasePath             string   `protobuf:"bytes,1,opt,name=base_path,json=basePath,proto3" json:"base_path,omitempty"`
	CopyPathSuffix       bool     `protobuf:"varint,2,opt,name=copy_path_suffix,json=copyPathSuffix,proto3" json:"copy_path_suffix,omitempty"`
	CopyQueryParams      bool     `protobuf:"varint,3,opt,name=copy_query_params,json=copyQueryParams,proto3" json:"copy_query_params,omitempty"`
	Country              string   `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	Cn                   string   `protobuf:"bytes,5,opt,name=cn,proto3" json:"cn,omitempty"`
	EmailAddress         string   `protobuf:"bytes,6,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	ExpectedCn           string   `protobuf:"bytes,7,opt,name=expected_cn,json=expectedCn,proto3" json:"expected_cn,omitempty"`
	Host                 string   `protobuf:"bytes,8,opt,name=host,proto3" json:"host,omitempty"`
	Ip                   string   `protobuf:"bytes,9,opt,name=ip,proto3" json:"ip,omitempty"`
	Locality             string   `protobuf:"bytes,10,opt,name=locality,proto3" json:"locality,omitempty"`
	Name                 string   `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	Organization         string   `protobuf:"bytes,12,opt,name=organization,proto3" json:"organization,omitempty"`
	OrganizationUnit     string   `protobuf:"bytes,13,opt,name=organization_unit,json=organizationUnit,proto3" json:"organization_unit,omitempty"`
	Port                 int32    `protobuf:"varint,14,opt,name=port,proto3" json:"port,omitempty"`
	Scheme               string   `protobuf:"bytes,15,opt,name=scheme,proto3" json:"scheme,omitempty"`
	State                string   `protobuf:"bytes,16,opt,name=state,proto3" json:"state,omitempty"`
	SslEnabled           bool     `protobuf:"varint,17,opt,name=ssl_enabled,json=sslEnabled,proto3" json:"ssl_enabled,omitempty"`
	Url                  string   `protobuf:"bytes,18,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Target) Reset()         { *m = Target{} }
func (m *Target) String() string { return proto.CompactTextString(m) }
func (*Target) ProtoMessage()    {}
func (*Target) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2142ecffc0e2122, []int{11}
}

func (m *Target) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Target.Unmarshal(m, b)
}
func (m *Target) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Target.Marshal(b, m, deterministic)
}
func (m *Target) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Target.Merge(m, src)
}
func (m *Target) XXX_Size() int {
	return xxx_messageInfo_Target.Size(m)
}
func (m *Target) XXX_DiscardUnknown() {
	xxx_messageInfo_Target.DiscardUnknown(m)
}

var xxx_messageInfo_Target proto.InternalMessageInfo

func (m *Target) GetBasePath() string {
	if m != nil {
		return m.BasePath
	}
	return ""
}

func (m *Target) GetCopyPathSuffix() bool {
	if m != nil {
		return m.CopyPathSuffix
	}
	return false
}

func (m *Target) GetCopyQueryParams() bool {
	if m != nil {
		return m.CopyQueryParams
	}
	return false
}

func (m *Target) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Target) GetCn() string {
	if m != nil {
		return m.Cn
	}
	return ""
}

func (m *Target) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func (m *Target) GetExpectedCn() string {
	if m != nil {
		return m.ExpectedCn
	}
	return ""
}

func (m *Target) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Target) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Target) GetLocality() string {
	if m != nil {
		return m.Locality
	}
	return ""
}

func (m *Target) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Target) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Target) GetOrganizationUnit() string {
	if m != nil {
		return m.OrganizationUnit
	}
	return ""
}

func (m *Target) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Target) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *Target) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Target) GetSslEnabled() bool {
	if m != nil {
		return m.SslEnabled
	}
	return false
}

func (m *Target) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type Strings struct {
	Strings              []string `protobuf:"bytes,1,rep,name=strings,proto3" json:"strings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Strings) Reset()         { *m = Strings{} }
func (m *Strings) String() string { return proto.CompactTextString(m) }
func (*Strings) ProtoMessage()    {}
func (*Strings) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2142ecffc0e2122, []int{12}
}

func (m *Strings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Strings.Unmarshal(m, b)
}
func (m *Strings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Strings.Marshal(b, m, deterministic)
}
func (m *Strings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Strings.Merge(m, src)
}
func (m *Strings) XXX_Size() int {
	return xxx_messageInfo_Strings.Size(m)
}
func (m *Strings) XXX_DiscardUnknown() {
	xxx_messageInfo_Strings.DiscardUnknown(m)
}

var xxx_messageInfo_Strings proto.InternalMessageInfo

func (m *Strings) GetStrings() []string {
	if m != nil {
		return m.Strings
	}
	return nil
}

// The supported value types for additional flow variables.  For now, only
// primitive types are supported.
type FlowVariable struct {
	// Types that are valid to be assigned to Value:
	//	*FlowVariable_Int32
	//	*FlowVariable_Int64
	//	*FlowVariable_String_
	//	*FlowVariable_Bool
	//	*FlowVariable_Double
	Value                isFlowVariable_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FlowVariable) Reset()         { *m = FlowVariable{} }
func (m *FlowVariable) String() string { return proto.CompactTextString(m) }
func (*FlowVariable) ProtoMessage()    {}
func (*FlowVariable) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2142ecffc0e2122, []int{13}
}

func (m *FlowVariable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowVariable.Unmarshal(m, b)
}
func (m *FlowVariable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowVariable.Marshal(b, m, deterministic)
}
func (m *FlowVariable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowVariable.Merge(m, src)
}
func (m *FlowVariable) XXX_Size() int {
	return xxx_messageInfo_FlowVariable.Size(m)
}
func (m *FlowVariable) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowVariable.DiscardUnknown(m)
}

var xxx_messageInfo_FlowVariable proto.InternalMessageInfo

type isFlowVariable_Value interface {
	isFlowVariable_Value()
}

type FlowVariable_Int32 struct {
	Int32 int32 `protobuf:"varint,1,opt,name=int32,proto3,oneof"`
}

type FlowVariable_Int64 struct {
	Int64 int64 `protobuf:"varint,2,opt,name=int64,proto3,oneof"`
}

type FlowVariable_String_ struct {
	String_ string `protobuf:"bytes,3,opt,name=string,proto3,oneof"`
}

type FlowVariable_Bool struct {
	Bool bool `protobuf:"varint,4,opt,name=bool,proto3,oneof"`
}

type FlowVariable_Double struct {
	Double float64 `protobuf:"fixed64,5,opt,name=double,proto3,oneof"`
}

func (*FlowVariable_Int32) isFlowVariable_Value() {}

func (*FlowVariable_Int64) isFlowVariable_Value() {}

func (*FlowVariable_String_) isFlowVariable_Value() {}

func (*FlowVariable_Bool) isFlowVariable_Value() {}

func (*FlowVariable_Double) isFlowVariable_Value() {}

func (m *FlowVariable) GetValue() isFlowVariable_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *FlowVariable) GetInt32() int32 {
	if x, ok := m.GetValue().(*FlowVariable_Int32); ok {
		return x.Int32
	}
	return 0
}

func (m *FlowVariable) GetInt64() int64 {
	if x, ok := m.GetValue().(*FlowVariable_Int64); ok {
		return x.Int64
	}
	return 0
}

func (m *FlowVariable) GetString_() string {
	if x, ok := m.GetValue().(*FlowVariable_String_); ok {
		return x.String_
	}
	return ""
}

func (m *FlowVariable) GetBool() bool {
	if x, ok := m.GetValue().(*FlowVariable_Bool); ok {
		return x.Bool
	}
	return false
}

func (m *FlowVariable) GetDouble() float64 {
	if x, ok := m.GetValue().(*FlowVariable_Double); ok {
		return x.Double
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FlowVariable) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FlowVariable_Int32)(nil),
		(*FlowVariable_Int64)(nil),
		(*FlowVariable_String_)(nil),
		(*FlowVariable_Bool)(nil),
		(*FlowVariable_Double)(nil),
	}
}

var E_Immutable = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         23939889,
	Name:          "apigee.immutable",
	Tag:           "varint,23939889,opt,name=immutable",
	Filename:      "external_callout.proto",
}

func init() {
	proto.RegisterType((*MessageContext)(nil), "apigee.MessageContext")
	proto.RegisterMapType((map[string]*FlowVariable)(nil), "apigee.MessageContext.AdditionalFlowVariablesEntry")
	proto.RegisterType((*Request)(nil), "apigee.Request")
	proto.RegisterMapType((map[string]*Strings)(nil), "apigee.Request.FormParamsEntry")
	proto.RegisterMapType((map[string]*Strings)(nil), "apigee.Request.HeadersEntry")
	proto.RegisterMapType((map[string]*Strings)(nil), "apigee.Request.QueryParamsEntry")
	proto.RegisterType((*Response)(nil), "apigee.Response")
	proto.RegisterMapType((map[string]*Strings)(nil), "apigee.Response.HeadersEntry")
	proto.RegisterType((*Fault)(nil), "apigee.Fault")
	proto.RegisterType((*Error)(nil), "apigee.Error")
	proto.RegisterType((*Policy)(nil), "apigee.Policy")
	proto.RegisterMapType((map[string]*Strings)(nil), "apigee.Policy.PropertiesEntry")
	proto.RegisterType((*ApiProxy)(nil), "apigee.ApiProxy")
	proto.RegisterType((*Client)(nil), "apigee.Client")
	proto.RegisterType((*CurrentFlow)(nil), "apigee.CurrentFlow")
	proto.RegisterType((*Proxy)(nil), "apigee.Proxy")
	proto.RegisterType((*Route)(nil), "apigee.Route")
	proto.RegisterType((*Target)(nil), "apigee.Target")
	proto.RegisterType((*Strings)(nil), "apigee.Strings")
	proto.RegisterType((*FlowVariable)(nil), "apigee.FlowVariable")
	proto.RegisterExtension(E_Immutable)
}

func init() { proto.RegisterFile("external_callout.proto", fileDescriptor_c2142ecffc0e2122) }

var fileDescriptor_c2142ecffc0e2122 = []byte{
	// 1482 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x4f, 0x6f, 0xdc, 0x44,
	0x14, 0xcf, 0x66, 0xd7, 0xfb, 0xe7, 0xed, 0x26, 0xbb, 0x1d, 0x4a, 0xea, 0x86, 0x86, 0xa6, 0x2e,
	0x94, 0x34, 0x82, 0x2d, 0x4a, 0xab, 0x80, 0x7a, 0x28, 0x24, 0x51, 0xa2, 0x54, 0x88, 0x36, 0x75,
	0x4b, 0x2f, 0x20, 0x99, 0x89, 0x3d, 0xd9, 0x8c, 0xea, 0xf5, 0xb8, 0x33, 0xe3, 0x34, 0x8b, 0xf8,
	0x00, 0x5c, 0xb9, 0x70, 0xe5, 0xcc, 0x05, 0x09, 0x21, 0x6e, 0x7c, 0x0c, 0xce, 0x5c, 0xf9, 0x16,
	0x08, 0xcd, 0x8c, 0xed, 0xb5, 0xdd, 0x4d, 0xa0, 0xaa, 0xb8, 0xd9, 0xbf, 0xdf, 0x7b, 0xe3, 0x99,
	0x79, 0xef, 0xf7, 0xde, 0x33, 0x2c, 0x91, 0x53, 0x49, 0x78, 0x84, 0x43, 0xcf, 0xc7, 0x61, 0xc8,
	0x12, 0x39, 0x8c, 0x39, 0x93, 0x0c, 0x35, 0x71, 0x4c, 0x47, 0x84, 0x2c, 0xaf, 0x8e, 0x18, 0x1b,
	0x85, 0xe4, 0x96, 0x46, 0x0f, 0x93, 0xa3, 0x5b, 0x01, 0x11, 0x3e, 0xa7, 0xb1, 0x64, 0xdc, 0x58,
	0x3a, 0x7f, 0x34, 0x61, 0xf1, 0x73, 0x22, 0x04, 0x1e, 0x91, 0x1d, 0x16, 0x49, 0x72, 0x2a, 0xd1,
	0x4d, 0x68, 0x71, 0xf2, 0x3c, 0x21, 0x42, 0xda, 0xb5, 0xd5, 0xda, 0x5a, 0x77, 0xa3, 0x3f, 0x34,
	0xcb, 0x0d, 0x5d, 0x03, 0xbb, 0x19, 0x8f, 0xde, 0x87, 0x36, 0x27, 0x22, 0x66, 0x91, 0x20, 0xf6,
	0xbc, 0xb6, 0x1d, 0x4c, 0x6d, 0x0d, 0xee, 0xe6, 0x16, 0xe8, 0x3a, 0x58, 0x84, 0x73, 0xc6, 0xed,
	0xba, 0x36, 0x5d, 0xc8, 0x4c, 0x77, 0x15, 0xe8, 0x1a, 0x0e, 0x7d, 0x02, 0x03, 0x3a, 0x1e, 0x27,
	0x12, 0x1f, 0x86, 0xc4, 0x3b, 0xc2, 0x49, 0x28, 0x85, 0xdd, 0x58, 0xad, 0x17, 0xed, 0xf7, 0x14,
	0xba, 0x6d, 0x7d, 0xf7, 0xeb, 0x4f, 0x5f, 0xd6, 0xdc, 0x7e, 0x6e, 0xad, 0x61, 0xa1, 0xbe, 0xa2,
	0xdd, 0x6c, 0xab, 0xfc, 0x15, 0x4d, 0xbb, 0x86, 0x43, 0x1f, 0x40, 0x07, 0xc7, 0xd4, 0x8b, 0x39,
	0x3b, 0x9d, 0xd8, 0xcd, 0xf2, 0xce, 0xb7, 0x62, 0x7a, 0xa0, 0x70, 0xb7, 0x8d, 0xd3, 0x27, 0x74,
	0x03, 0x9a, 0x7e, 0x48, 0x49, 0x24, 0xed, 0x96, 0xb6, 0x5d, 0xcc, 0x6c, 0x77, 0x34, 0xea, 0xa6,
	0x2c, 0xda, 0x84, 0x9e, 0x9f, 0x70, 0x4e, 0x22, 0xe9, 0x1d, 0x85, 0xec, 0x85, 0xdd, 0xd6, 0xd6,
	0x6f, 0xe4, 0xd6, 0x86, 0xdb, 0x0b, 0xd9, 0x0b, 0xb7, 0xeb, 0x4f, 0x5f, 0xd0, 0x3b, 0x00, 0x63,
	0x13, 0x04, 0x8f, 0x06, 0x76, 0x67, 0xb5, 0xb6, 0xd6, 0xc9, 0xce, 0xd7, 0x49, 0x89, 0xfb, 0x01,
	0xda, 0x80, 0x0b, 0x8c, 0x8f, 0x70, 0x44, 0xbf, 0xc1, 0x92, 0xb2, 0xc8, 0x8b, 0xf0, 0x98, 0xd8,
	0x50, 0x34, 0x1e, 0x14, 0xf9, 0x07, 0x78, 0x4c, 0xd0, 0x87, 0x30, 0x20, 0xd1, 0x09, 0xe5, 0x2c,
	0x1a, 0xab, 0x5d, 0x69, 0x97, 0x6e, 0xd1, 0xa5, 0x5f, 0xa0, 0xb5, 0xc7, 0x75, 0xb0, 0xcc, 0xb5,
	0xf4, 0xca, 0xf7, 0x67, 0xee, 0xc4, 0x70, 0xca, 0x88, 0xb3, 0x44, 0x12, 0x7b, 0xa1, 0x6c, 0xe4,
	0x2a, 0xd0, 0x35, 0x9c, 0xba, 0x35, 0x89, 0xf9, 0x88, 0x48, 0x7b, 0xb1, 0x7c, 0x6b, 0x4f, 0x34,
	0xea, 0xa6, 0x2c, 0x62, 0x70, 0x19, 0x07, 0x01, 0x55, 0x7b, 0xc6, 0xa1, 0xbe, 0x38, 0xef, 0x04,
	0x73, 0xaa, 0x62, 0x2a, 0xec, 0xbe, 0x8e, 0xfd, 0xed, 0xcc, 0xb5, 0x9c, 0xab, 0xc3, 0xad, 0xdc,
	0x4f, 0xdd, 0xe3, 0xd3, 0xcc, 0x6b, 0x37, 0x92, 0x7c, 0xe2, 0x5e, 0xc2, 0xb3, 0xd9, 0xe5, 0xaf,
	0xe1, 0xca, 0x79, 0x8e, 0x68, 0x00, 0xf5, 0x67, 0x64, 0xa2, 0xb3, 0xbf, 0xe3, 0xaa, 0x47, 0xb4,
	0x0e, 0xd6, 0x09, 0x0e, 0x93, 0x2c, 0xcb, 0x2f, 0xe6, 0x49, 0x55, 0x70, 0x76, 0x8d, 0xc9, 0xdd,
	0xf9, 0x8f, 0x6b, 0xce, 0xcf, 0x0d, 0x68, 0xa5, 0x6a, 0x41, 0x97, 0xa0, 0x9e, 0x70, 0x6a, 0x56,
	0xcb, 0x6e, 0x5d, 0x21, 0xe8, 0x32, 0x34, 0x4e, 0x08, 0x3f, 0xd4, 0x6b, 0xe6, 0x8c, 0x86, 0xd0,
	0x1a, 0xf4, 0x8e, 0xa5, 0x8c, 0xbd, 0x13, 0xc2, 0x05, 0x65, 0x91, 0x56, 0x4c, 0x6e, 0xd2, 0x55,
	0xd4, 0x53, 0xc3, 0xa0, 0x4d, 0x68, 0x1d, 0x13, 0x1c, 0x10, 0x9e, 0xc9, 0xe4, 0x4a, 0x45, 0xad,
	0xc3, 0x7d, 0x43, 0x9b, 0x3b, 0xc9, 0x8c, 0xd1, 0xa7, 0xd0, 0x3d, 0x62, 0x7c, 0xec, 0xc5, 0x98,
	0xe3, 0xb1, 0xb0, 0x2d, 0xed, 0x7b, 0xb5, 0xea, 0xbb, 0xc7, 0xf8, 0xf8, 0x40, 0x5b, 0x18, 0x77,
	0x38, 0xca, 0x01, 0xb4, 0x03, 0xbd, 0xe7, 0x09, 0xe1, 0x93, 0x6c, 0x89, 0xa6, 0x5e, 0x62, 0xb5,
	0xba, 0xc4, 0x23, 0x65, 0x53, 0x5c, 0xa3, 0xfb, 0x7c, 0x8a, 0x20, 0x1b, 0x5a, 0xbe, 0x8a, 0x65,
	0x2a, 0xad, 0x8e, 0x9b, 0xbd, 0x2e, 0x7f, 0x06, 0xbd, 0xe2, 0xce, 0x67, 0x04, 0xe5, 0xdd, 0x72,
	0x50, 0xf2, 0x32, 0xf5, 0x58, 0x72, 0x1a, 0x8d, 0x44, 0x21, 0x1e, 0xcb, 0x0f, 0xa0, 0x5f, 0x39,
	0xca, 0xeb, 0xad, 0xf7, 0x10, 0x06, 0xd5, 0x73, 0xbd, 0xd6, 0x82, 0xce, 0xdf, 0x35, 0x68, 0x67,
	0x25, 0x13, 0xdd, 0x80, 0xae, 0x90, 0x58, 0x26, 0xc2, 0xf3, 0x59, 0x40, 0xf4, 0x8a, 0x56, 0x16,
	0x7c, 0x30, 0xcc, 0x0e, 0x0b, 0x08, 0x5a, 0x87, 0x05, 0x4e, 0xb0, 0x60, 0x91, 0x17, 0x1f, 0x73,
	0x9c, 0xd6, 0xe0, 0x3c, 0x4d, 0x7a, 0x86, 0x3b, 0xd0, 0x14, 0xfa, 0x68, 0x9a, 0x27, 0x75, 0x1d,
	0xa8, 0x95, 0x6a, 0xa5, 0x3e, 0x23, 0x51, 0x0a, 0x11, 0x6a, 0xfc, 0x7f, 0x11, 0x72, 0xbe, 0x05,
	0x4b, 0x57, 0x68, 0x84, 0xa0, 0xa1, 0xab, 0x94, 0x59, 0x46, 0x3f, 0x2b, 0xa5, 0xc8, 0x49, 0x5c,
	0x39, 0x9f, 0x86, 0xd0, 0x35, 0x68, 0xfb, 0x58, 0x92, 0x11, 0xe3, 0x93, 0xb2, 0x4a, 0x72, 0x18,
	0x5d, 0x83, 0x9e, 0xae, 0xfa, 0x9e, 0xd0, 0x9f, 0x4d, 0x8f, 0xd1, 0xd5, 0x98, 0xd9, 0x89, 0xf3,
	0x14, 0x2c, 0xdd, 0x85, 0xd0, 0x55, 0x68, 0xa5, 0x05, 0xb7, 0x2c, 0xd8, 0x0c, 0x7d, 0xb5, 0x96,
	0xe7, 0xfc, 0x59, 0x83, 0xe6, 0x01, 0x0b, 0xa9, 0x3f, 0x51, 0x67, 0x98, 0x9e, 0x2b, 0x3f, 0x83,
	0x3e, 0xde, 0x4d, 0x58, 0x90, 0x74, 0x4c, 0x3c, 0x89, 0x9f, 0x91, 0xc8, 0x8b, 0x84, 0x5e, 0xb8,
	0x9e, 0xcb, 0x5d, 0x71, 0x4f, 0x14, 0xf5, 0x40, 0xa0, 0x7b, 0x00, 0x31, 0x67, 0x31, 0xe1, 0x92,
	0x92, 0x2c, 0x92, 0x6f, 0xe7, 0x25, 0x5a, 0x7f, 0x49, 0x55, 0xea, 0xd4, 0x20, 0x15, 0xed, 0xd4,
	0x43, 0x09, 0xa1, 0x42, 0xbf, 0x5e, 0xd8, 0xf6, 0xa1, 0x9d, 0xf5, 0xcb, 0xf3, 0x4e, 0x78, 0x4d,
	0xdd, 0xda, 0x09, 0xd5, 0xb5, 0xac, 0x14, 0xc4, 0x1c, 0x76, 0x7e, 0xac, 0x43, 0xd3, 0xb4, 0x53,
	0xf4, 0x26, 0xcc, 0xfb, 0x51, 0x79, 0x99, 0x79, 0x3f, 0x52, 0xb1, 0xf1, 0x59, 0xa2, 0xf6, 0x5c,
	0x5e, 0x23, 0x43, 0x95, 0x1e, 0xc8, 0x18, 0xd3, 0xd0, 0xc3, 0x41, 0xc0, 0x89, 0x10, 0xe5, 0x84,
	0xe8, 0x69, 0x6e, 0xcb, 0x50, 0x6a, 0xb3, 0xc7, 0x4c, 0xa4, 0x39, 0x9d, 0x6f, 0x56, 0x41, 0xea,
	0xf3, 0x34, 0xd6, 0xe3, 0xc3, 0xf4, 0xf3, 0x34, 0x56, 0x67, 0x08, 0x99, 0x8f, 0x43, 0x2a, 0xcd,
	0xc8, 0x30, 0x3d, 0x43, 0x06, 0xa3, 0x9b, 0xd0, 0x2b, 0x76, 0x60, 0x53, 0xd2, 0xf2, 0xef, 0x17,
	0xa9, 0x97, 0x9a, 0x79, 0x12, 0x51, 0xa9, 0xe7, 0x85, 0xd9, 0xcd, 0xfc, 0x8b, 0x88, 0x4a, 0xb5,
	0xe7, 0x98, 0x71, 0xa9, 0x07, 0x84, 0xbc, 0x20, 0x68, 0x08, 0xad, 0x40, 0x53, 0xf8, 0xc7, 0xa4,
	0x3a, 0x10, 0xa4, 0x20, 0x7a, 0x0b, 0x2c, 0x55, 0x37, 0x2a, 0xbd, 0xdf, 0x60, 0xba, 0xdc, 0x88,
	0xd0, 0x23, 0x91, 0xea, 0x62, 0x81, 0xee, 0xfb, 0xed, 0x69, 0xb9, 0x11, 0xe1, 0xae, 0x21, 0x9c,
	0x47, 0xd0, 0x2d, 0x4c, 0x30, 0xe7, 0x85, 0xfb, 0x3d, 0xe8, 0x66, 0x93, 0xe6, 0x4b, 0x11, 0x2f,
	0x32, 0xce, 0xef, 0x35, 0xb0, 0x4c, 0xf2, 0xa8, 0xd8, 0x45, 0x41, 0xcc, 0x68, 0x36, 0xa5, 0xd4,
	0xca, 0xb1, 0x4b, 0x39, 0x3d, 0xa2, 0x38, 0xd0, 0x31, 0x03, 0x97, 0x47, 0xe3, 0x4a, 0x3a, 0x19,
	0xfc, 0x7e, 0xac, 0x6c, 0x0e, 0xb1, 0x20, 0x5e, 0x8c, 0xe5, 0x71, 0xa5, 0x30, 0x28, 0xfc, 0x00,
	0xcb, 0x63, 0x75, 0x70, 0x45, 0x7b, 0x22, 0x39, 0x3a, 0xa2, 0xa7, 0xe5, 0x54, 0x00, 0xc5, 0x3c,
	0xd6, 0x84, 0xe9, 0xe0, 0x61, 0x39, 0x23, 0x14, 0xe2, 0x6c, 0x81, 0xa5, 0x27, 0x9e, 0xf3, 0xee,
	0x62, 0x25, 0x9f, 0x82, 0x4a, 0x3b, 0x4d, 0x41, 0xe7, 0xaf, 0x06, 0x34, 0xcd, 0x3c, 0x54, 0xde,
	0x72, 0x6d, 0xf6, 0x96, 0xd7, 0x60, 0xe0, 0xb3, 0x78, 0xe2, 0x15, 0xf7, 0xad, 0xd6, 0x6d, 0xbb,
	0x8b, 0x0a, 0x3f, 0x98, 0x6e, 0x7a, 0x1d, 0x2e, 0x68, 0xcb, 0x52, 0x8f, 0xae, 0x6b, 0xd3, 0xbe,
	0x22, 0x0a, 0xfd, 0xab, 0xa8, 0xac, 0xc6, 0x4c, 0x65, 0x19, 0x45, 0x5a, 0x55, 0x45, 0xbe, 0x24,
	0xb8, 0xe6, 0xd9, 0x82, 0xbb, 0x0a, 0x5d, 0x72, 0x1a, 0x13, 0x5f, 0x92, 0xc0, 0xf3, 0x53, 0x69,
	0xb8, 0x90, 0x41, 0x3b, 0x51, 0xae, 0xc8, 0xf6, 0x59, 0x8a, 0xec, 0x9c, 0xa7, 0x48, 0x98, 0xad,
	0xc8, 0x2c, 0x30, 0xdd, 0x59, 0x55, 0xb7, 0x2c, 0xd6, 0xde, 0x2b, 0x8a, 0x75, 0xe1, 0xbf, 0x89,
	0x75, 0xf1, 0x3c, 0xb1, 0xf6, 0xcf, 0x15, 0xeb, 0xe0, 0xdf, 0xc5, 0x7a, 0xe1, 0x0c, 0xb1, 0xaa,
	0xaa, 0xae, 0x72, 0x16, 0x99, 0xaa, 0xae, 0x92, 0xf5, 0x3a, 0xb4, 0xd2, 0x02, 0xae, 0x7a, 0xba,
	0xe9, 0x85, 0xc2, 0xae, 0xad, 0xd6, 0x55, 0x4f, 0x4f, 0x5f, 0x9d, 0xef, 0x6b, 0xd0, 0x2b, 0x0e,
	0xb5, 0x68, 0x09, 0x2c, 0x1a, 0xc9, 0xdb, 0x1b, 0x66, 0x0a, 0xd9, 0x9f, 0x73, 0xcd, 0x6b, 0x8a,
	0x6f, 0xde, 0x31, 0xbd, 0x2a, 0xc5, 0x37, 0xef, 0x20, 0x1b, 0x9a, 0x69, 0x9b, 0xd5, 0xa2, 0xdb,
	0x9f, 0x73, 0xd3, 0x77, 0x74, 0x11, 0x1a, 0x87, 0x8c, 0x85, 0x3a, 0xc3, 0xda, 0xfb, 0x73, 0xae,
	0x7e, 0x53, 0xf6, 0x01, 0x4b, 0x0e, 0x43, 0xa2, 0xb3, 0xab, 0xa6, 0xec, 0xcd, 0xfb, 0x76, 0x2b,
	0xed, 0x42, 0x1b, 0x5f, 0xc1, 0xd2, 0x6e, 0xfa, 0x9f, 0xbb, 0x63, 0x7e, 0x73, 0x1f, 0x13, 0x7e,
	0x42, 0x7d, 0x82, 0xb6, 0x61, 0xf1, 0x80, 0x33, 0x9f, 0x08, 0x91, 0xfe, 0x17, 0xa0, 0xa5, 0xd9,
	0x3f, 0x0a, 0xcb, 0x67, 0xe0, 0xce, 0xdc, 0xdd, 0x7b, 0xd0, 0xc9, 0x7f, 0x21, 0xd1, 0xca, 0xd0,
	0xfc, 0x31, 0x0f, 0xb3, 0x3f, 0xe6, 0xe1, 0x1e, 0x25, 0x61, 0xf0, 0x50, 0x57, 0x2b, 0x61, 0xff,
	0xf2, 0xc3, 0x6f, 0x5d, 0xad, 0xa0, 0xa9, 0xcb, 0xf6, 0x3a, 0x5c, 0xf2, 0xd9, 0x38, 0xf3, 0x4b,
	0xbf, 0xa2, 0xdd, 0xb7, 0xfb, 0x95, 0x6d, 0x1f, 0x36, 0x35, 0x7e, 0xfb, 0x9f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x84, 0x78, 0xe8, 0x10, 0xb8, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExternalCalloutServiceClient is the client API for ExternalCalloutService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExternalCalloutServiceClient interface {
	// This method takes a MessageContext and returns a modified MessageContext.
	// See the commentary on MessageContext for how to use it.
	//
	// The exceptions thrown by the implementation of the gRPC service will be
	// translated into faults by the message processor.
	ProcessMessage(ctx context.Context, in *MessageContext, opts ...grpc.CallOption) (*MessageContext, error)
}

type externalCalloutServiceClient struct {
	cc *grpc.ClientConn
}

func NewExternalCalloutServiceClient(cc *grpc.ClientConn) ExternalCalloutServiceClient {
	return &externalCalloutServiceClient{cc}
}

func (c *externalCalloutServiceClient) ProcessMessage(ctx context.Context, in *MessageContext, opts ...grpc.CallOption) (*MessageContext, error) {
	out := new(MessageContext)
	err := c.cc.Invoke(ctx, "/apigee.ExternalCalloutService/ProcessMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExternalCalloutServiceServer is the server API for ExternalCalloutService service.
type ExternalCalloutServiceServer interface {
	// This method takes a MessageContext and returns a modified MessageContext.
	// See the commentary on MessageContext for how to use it.
	//
	// The exceptions thrown by the implementation of the gRPC service will be
	// translated into faults by the message processor.
	ProcessMessage(context.Context, *MessageContext) (*MessageContext, error)
}

// UnimplementedExternalCalloutServiceServer can be embedded to have forward compatible implementations.
type UnimplementedExternalCalloutServiceServer struct {
}

func (*UnimplementedExternalCalloutServiceServer) ProcessMessage(ctx context.Context, req *MessageContext) (*MessageContext, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessMessage not implemented")
}

func RegisterExternalCalloutServiceServer(s *grpc.Server, srv ExternalCalloutServiceServer) {
	s.RegisterService(&_ExternalCalloutService_serviceDesc, srv)
}

func _ExternalCalloutService_ProcessMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageContext)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalCalloutServiceServer).ProcessMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apigee.ExternalCalloutService/ProcessMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalCalloutServiceServer).ProcessMessage(ctx, req.(*MessageContext))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExternalCalloutService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apigee.ExternalCalloutService",
	HandlerType: (*ExternalCalloutServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProcessMessage",
			Handler:    _ExternalCalloutService_ProcessMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "external_callout.proto",
}
